apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v2
  labels:
    app: fil-rouge
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
  template:
    metadata:
      labels:
        app: ratings
        version: '2'
    spec:
      containers:
      - name: ratings
        image: ratings:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: SERVICE_VERSION
          value: v2
        - name: DB_TYPE
          value: mysql
        - name: MYSQL_DB_HOST
          value: mysql
        - name: MYSQL_DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql-root-pwd
              key: username
        - name: MYSQL_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-root-pwd
              key: password
        ports:
        - containerPort: 9080
        livenessProbe:
          httpGet:
            path: /health
            port: 9080
          periodSeconds: 2
          initialDelaySeconds: 0
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ratings # sans d√©finition de endpoint /ready, oncheck avec /ratings
            port: 9080
          periodSeconds: 2
          initialDelaySeconds: 0
          failureThreshold: 3
          successThreshold: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v1
  labels:
    app: fil-rouge
    version: '1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
  template:
    metadata:
      labels:
        app: ratings
        version: '1'
    spec:
      containers:
        - name: ratings
          imagePullPolicy: IfNotPresent
          image: ratings:latest
          ports:
            - containerPort: 9080
---
apiVersion: v1
kind: Service
metadata:
  name: ratings
spec:
  selector:
    app: ratings
    version: '2'
  ports:
    - protocol: TCP
      port: 9080
      targetPort: 9080